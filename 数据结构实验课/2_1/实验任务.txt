任务描述
本关任务：使用邻接表构成有向图来表达地铁线路，存储武汉地铁1号线、2号线、6号线和7号线在前两站的站点信息。
其中，地铁线路均为双向线路，相同站名的地铁站为转乘车站；

相关知识
为了完成本关任务，你需要掌握：
1.如何构造双向链表
2.如何使用邻接表构造有向图。

构造双向链表
1.创建双节点类

class DoubleNode{
    int data;
    //保存前驱节点的地址
    DoubleNode pre;
    //保存后继节点的地址
    DoubleNode next;
    //定义三个构造方法
    public DoubleNode(){}
    public DoubleNode(int data){
        this.data = data;
    }
    public DoubleNode(DoubleNode pre, int data, DoubleNode next) {
        this.pre = pre;
        this.data = data;
        this.next = next;
    }
}
2.创建双向链表类

public class DoubleLinkedList {
    //头节点的地址
    private DoubleNode head = null;
    //尾结点的地址
    private DoubleNode tail = null;
    //记录节点数
    private int size;
}

3.在双向链表的头部插入新结点

public void addFir(int data) {
    DoubleNode node = new DoubleNode(null,data,head);
    //链表中没有结点
    if (tail == null) {
        tail = node;
    } else {
        head.pre = node;
    }
    head = node;
    size ++;
}

使用邻接表构造有向图
图的邻接表分为两个部分：表头结点和边表结点，因此创建有向图也分成两部分：一是创建表头结点，二是创建边表结点构成的边表。

编程要求
根据提示，在右侧编辑器补充代码，使用邻接表构成有向图来表达地铁线路，存储武汉地铁1号线、2号线、6号线和7号线在汉口区域的站点信息。
输入形式：
总线路条数n
线路号1  站名1 到下一站的距离 站名2 …… 到下一站的距离 站名n 0(到下一站距离为0，代表该站是线路最后一站)
线路号n  站名1 到下一站的距离 站名2 …… 到下一站的距离 站名n 0(到下一站距离为0，代表该站是线路最后一站)
输出形式：
线路号  站名1 到下一站的距离 站名2 …… 到下一站的距离 站名n

测试说明
平台会对你编写的代码进行测试：

测试输入：
4 1 六渡桥 5.00 循礼门 4.00 大智路 4.00 三阳路 5.00 黄浦路 0 2 汉口火车站 10.00 范湖 2.00 王家墩东 2.00 青年路 4.00 中山公园 2.00 循礼门 2.00 江汉路 5.00 积玉桥 0 6 三眼桥 3.00 香港路 2.00 苗栗路 2.00 大智路 5.00 江汉路 1.00 汉正街 0 7 武汉商务区 1.00 王家墩东 2.00 取水楼 2.00 香港路 6.00 三阳路 9.00 徐家棚 3.00 三角路 3.00 三层楼 3.00 积玉桥 0
预期输出：
1 六渡桥 5.00 循礼门 4.00 大智路 4.00 三阳路 5.00 黄浦路 2 汉口火车站 10.00 范湖 2.00 王家墩东 2.00 青年路 4.00 中山公园 2.00 循礼门 2.00 江汉路 5.00 积玉桥 6 三眼桥 3.00 香港路 2.00 苗栗路 2.00 大智路 5.00 江汉路 1.00 汉正街 7 武汉商务区 1.00 王家墩东 2.00 取水楼 2.00 香港路 6.00 三阳路 9.00 徐家棚 3.00 三角路 3.00 三层楼 3.00 积玉桥