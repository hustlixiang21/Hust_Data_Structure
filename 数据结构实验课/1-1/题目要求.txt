任务描述
本关任务：以链表作为物理结构，使用C语言编程实现循环队列的基本功能，可参考约瑟夫环的设计。
依据循环队列的功能，实现对输入/输出数据进行入队/出队操作，能够处理满队/空队等边界情况。

相关知识
为了完成本关任务，你需要掌握：
1.如何建立链式循环队列；
2.如何对循环队列进行入队、出队等操作；
3.如何判断满队/空队等边界情况。

编程要求
使用链表建立容量为8的循环空队列，下标依次记为0,1,2...,7,指定起始位置（队首）下标i，
读入数据后从起始位置i顺序存储整数序列，队列满队(读入8个元素)之后停止读入；
输出时，如果输出个数大于存储最大容量8则输出"Error"，
否则如果输出个数大于已存储元素个数(即会发生空队列输出)则输出"Fault"；
如果队列已满则先输出"Full"，然后从起始位置开始顺序输出k个数据，否则直接顺序输出k个数据。
输入形式：
非负整数序列n,i,k,e1,e2,...,en。(n为读入元素个数,i为队首下标,k为输出个数)
输出形式：非负整数序列"Full",e1',e2',...,ek'或"Error"或"Fault"。
（"Full"只有在队满时才会输出，后面是循环队列中存储的k元素）

测试说明
平台会对你编写的代码进行测试：
测试输入：3 4 6 3 8 2
预期输出：Fault
说明：存储数据元素个数不足6个，会发生空队列输出，输出"Fault"。
测试输入：5 0 5 4 7 2 8 5
预期输出：4 7 2 8 5
说明：没有发生满队，直接输出5个元素即可。
测试输入：9 2 4 5 7 2 8 6 1 9 4 3
预期输出：Full 5 7 2 8
说明：预读入元素个数有9个，会发生满队的情况，最后一个元素'3'不会读入，
输出时会先输出"Full"后再输出4个元素。
测试输入：7 1 9 0 1 2 3 4 5 6
预期输出：Error
说明：队列存储容量最大只有8，输出个数大于存储最大容量，会发生空队列输出的情况，
应该输出"Error"。
注意：末尾空格有无空格都算对。